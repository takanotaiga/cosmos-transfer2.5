# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cosmos-transfer2"
version = "1.1.0"
authors = [
    {name = "NVIDIA Corporation"},
]
description = "Cosmos Transfer2 World Foundation Model"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: GPU :: NVIDIA CUDA",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "attrs>=25.1.0",
    "better-profanity>=0.7.0",
    "boto3>=1.38.31",
    "click>=8.1.7",
    "decord>=0.6.0",
    "diffusers>=0.33.1",
    "einops>=0.8.1",
    "ftfy>=6.3.1",
    "fvcore>=0.1.5.post20221221",
    "h11>=0.16.0",
    "huggingface-hub>=0.32.4",
    "hydra-core>=1.3.2",
    "imageio[pyav,ffmpeg]>=2.37.0",
    "iopath>=0.1.10",
    "ipdb>=0.13.13",
    "loguru>=0.7.3",
    "mediapy>=1.2.4",
    "megatron-core>=0.12.1",
    "moderngl>=5.11.1",
    "modelscope>=1.26.0",
    "nltk>=3.9.1",
    "numpy>=1.26.4",
    "nvidia-ml-py>=12.535.133",
    "omegaconf>=2.3.0",
    "opencv-python>=4.11.0.86",
    "pandas>=2.2.3",
    "peft>=0.15.2",
    "pyarrow>=21.0.0",
    "pillow>=11.1.0",
    "protobuf>=4.25.3",
    "pycocotools>=2.0.10",
    "pynvml>=12.0.0",
    "pyyaml>=6.0.2",
    "qwen-vl-utils[decord]>=0.0.11",
    "retinaface-py>=0.0.2",
    "safetensors>=0.5.3",
    "scikit-image>=0.25.2",
    "scipy>=1.14.1",
    "sentencepiece>=0.2.0",
    "setuptools>=80.9.0",
    "shapely>=2.0.5",
    "termcolor>=3.1.0",
    "torch>=2.6.0",
    "torchvision>=0.21.0",
    "tqdm>=4.66.5",
    "transformers>=4.51.3",
    "tyro>=0.9.32",
    "webdataset>=0.2.111",
]

[project.optional-dependencies]
# This must mirror dependency-groups
cu128_torch271 = [
  "apex==0.1.0+cu128.torch271",
  "flash-attn==2.8.3+cu12torch2.7cxx11abiTRUE",
  "natten==0.21.0+cu128.torch271",
  "torch==2.7.1+cu128",
  "torchvision==0.22.1+cu128",
  "transformer-engine==1.13+cu128.torch271",
  # Torch dependencies
  # Dependencies determined from `uv pip install "torch==2.7.1+cu128" "torchvision==0.22.1+cu128" --index-url https://download.pytorch.org/whl`
  # Issue: https://github.com/astral-sh/uv/issues/14237
  "nvidia-cublas-cu12==12.8.3.14",
  "nvidia-cuda-cupti-cu12==12.8.57",
  "nvidia-cuda-nvrtc-cu12==12.8.61",
  "nvidia-cuda-runtime-cu12==12.8.57",
  "nvidia-cudnn-cu12==9.7.1.26",
  "nvidia-cufft-cu12==11.3.3.41",
  "nvidia-cufile-cu12==1.13.0.11",
  "nvidia-curand-cu12==10.3.9.55",
  "nvidia-cusolver-cu12==11.7.2.55",
  "nvidia-cusparse-cu12==12.5.7.53",
  "nvidia-cusparselt-cu12==0.6.3",
  "nvidia-nccl-cu12==2.26.2",
  "nvidia-nvjitlink-cu12==12.8.61",
  "nvidia-nvtx-cu12==12.8.55",
]
gradio = ["cosmos_gradio"]
profile = ["pyinstrument>=5.1.1"]

[dependency-groups]
dev = []
# This must mirror project.optional-dependencies
# It is needed, because uv does not support default extras
cu128_torch271 = [
  "apex==0.1.0+cu128.torch271",
  "flash-attn==2.8.3+cu12torch2.7cxx11abiTRUE",
  "natten==0.21.0+cu128.torch271",
  "torch==2.7.1+cu128",
  "torchvision==0.22.1+cu128",
  "transformer-engine==1.13+cu128.torch271",
  # Torch dependencies
  # Dependencies determined from `uv pip install "torch==2.7.1+cu128" "torchvision==0.22.1+cu128" --index-url https://download.pytorch.org/whl`
  # Issue: https://github.com/astral-sh/uv/issues/14237
  "nvidia-cublas-cu12==12.8.3.14",
  "nvidia-cuda-cupti-cu12==12.8.57",
  "nvidia-cuda-nvrtc-cu12==12.8.61",
  "nvidia-cuda-runtime-cu12==12.8.57",
  "nvidia-cudnn-cu12==9.7.1.26",
  "nvidia-cufft-cu12==11.3.3.41",
  "nvidia-cufile-cu12==1.13.0.11",
  "nvidia-curand-cu12==10.3.9.55",
  "nvidia-cusolver-cu12==11.7.2.55",
  "nvidia-cusparse-cu12==12.5.7.53",
  "nvidia-cusparselt-cu12==0.6.3",
  "nvidia-nccl-cu12==2.26.2",
  "nvidia-nvjitlink-cu12==12.8.61",
  "nvidia-nvtx-cu12==12.8.55",
]
gradio = ["cosmos_gradio"]
profile = ["pyinstrument"]

[project.readme]
content-type = "text/markdown"
text = '''
# Cosmos-Transfer2

[Documentation](https://github.com/nvidia-cosmos/cosmos-transfer2/blob/main/README.md)
'''

[project.urls]
documentation = "https://github.com/nvidia-cosmos/cosmos-transfer2/blob/main/README.md"
homepage = "https://github.com/nvidia-cosmos/cosmos-transfer2/"
issues = "https://github.com/nvidia-cosmos/cosmos-transfer2/issues"
repository = "https://github.com/nvidia-cosmos/cosmos-transfer2"

[tool.uv]
default-groups = ["dev", "cu128_torch271"]
no-build-package = [
  "apex",
  "flash-attn",
  "natten",
  "transformer-engine",
]

[tool.uv.sources]
apex = [{ index = "cosmos" }]
flash-attn = [{ url = "https://github.com/Dao-AILab/flash-attention/releases/download/v2.8.3/flash_attn-2.8.3+cu12torch2.7cxx11abiTRUE-cp310-cp310-linux_x86_64.whl"}]
natten = [{ index = "cosmos" }]
transformer-engine = [{ index = "cosmos" }]
torch = [{ index = "cosmos" }]
torchvision = [{ index = "cosmos" }]
cosmos-gradio = [{ path = "./packages/cosmos-gradio", editable = true }]

[[tool.uv.index]]
name = "cosmos"
url = "https://nvidia-cosmos.github.io/cosmos-dependencies/simple"
explicit = true

[tool.hatch.build.targets.sdist]
packages = [
  "cosmos_transfer2",
  "imaginaire",
  "projects",
]

[tool.hatch.build.targets.wheel]
packages = [
  "cosmos_transfer2",
  "imaginaire",
  "projects",
]
exclude = [
  "*_test.py",
]

[tool.coverage.report]
include_namespace_packages = true
skip_empty = true
omit = [
    "tests/*",
    "legacy/*",
    ".venv/*",
    "**/test_*.py",
    "config.py",
    "config-3.10.py"
]
